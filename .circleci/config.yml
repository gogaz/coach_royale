version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
      - image: circleci/postgres:10.5-alpine-ram
        environment:
          POSTGRES_USER: coach_royale
          POSTGRES_DB: test_coach_royale
      - image: circleci/redis
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - pip-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m pip install --upgrade pip
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            mv coach_royale/settings.example.py coach_royale/settings.py
      - save_cache:
          paths:
            - ./venv
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Linter
          command: |
            . venv/bin/activate
            python3 -m flake8
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            coverage run manage.py test --noinput
            coverage report
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - run:
          name: Code coverage
          command: |
            . venv/bin/activate
            codecov
      - store_test_results:
          path: test_results

  # Build the front-end
  build-front:
    docker:
      - image: circleci/node:8-jessie
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            - v2-dependencies-
      - run:
          name: Install dependencies
          command: cd front && npm install
      - save_cache:
          key: v2-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Test front-end
          command: cd front && npm test && npm run coverage
      - run:
          name: Build front-end
          command: cd front && npm run build
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-front
      - build