version: '3'

services:
  postgres:
    container_name: db.postgres
    image: postgres:latest
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "coach_royale"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    expose:
      - "5432"
    restart: on-failure
  redis:
    image: redis:alpine
    restart: on-failure
  nginx:
    image: nginx:alpine
    restart: on-failure
    ports:
      - "127.0.0.1:8000:80"
  backend:
    image: coach_royale_base
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    volumes:
      - ./coach_royale:/code/coach_royale
      - ./backend:/code/backend
      - ./static:/code/static
      - ./logs:/logs
    expose:
      - "8000"
    restart: always
  celery:
    image: coach_royale_base
    command: celery -A coach_royale worker -l INFO
    user: nobody
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
  celery-beat:
    image: coach_royale_base
    command: >
      sh -c "rm -f /code/celerybeat.pid && celery -A coach_royale beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
volumes:
  postgres: